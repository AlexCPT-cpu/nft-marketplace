// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  username         String?   @unique
  image            String?
  background       String?
  email            String?   @unique
  emailVerified    DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  address          String?   @unique
  instaUsername    String?
  twitterUsername  String?
  facebookUsername String?
  followIds        String[]
  followerIds      String[]
  description      String?
  invitedBy        String?
  volume           Float?
  items            Int?
  collections      String[]
  offersReceived   String[]
  offersMade       String[]
  userNfts         String[]
}

model NFT {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  collectionId      String?
  Activity          String[]
  nftId             Int?
  image             String?
  collectionAddress String?
  category          String?
  isAuctioned       Boolean?
  isSell            Boolean?
  isOffered         Boolean?
  currentValue      Float?
  currency          String?
  listedPrice       Float?
  latestBid         Int?
  latestOffer       Int?
  auctionTimer      Int?
  likes             Int?
  userId            String?
  OffersReceived    String[]
  OffersMade        String[]
}

model Collection {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  creator          String?
  name             String?
  logo             String?
  background       String?
  address          String?
  instaUsername    String?
  twitterUsername  String?
  facebookUsername String?
  followIds        String[]
  followerIds      String[]
  volume           Float?
  items            Int?
  owners           Int?
  sold             Int?
  likes            Int?
  floorPrice       Int?
  description      String?
  categories       String[]
  NFTs             String[]
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  collections String[]
}

model OffersReceived {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String?
  price  Float?
  nftId  String?
}

model OffersMade {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String?
  price  Float?
  nftId  String?
}

model Activity {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  activityType String?
  item         String[]
  price        Float?
  from         String?
  fromAddress  String?
  to           String?
  toAddress    String?
  time         String?
  nftId        String?
}
