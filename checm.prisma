// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id               String    @id @default(uuid())
    name             String?
    username         String?   @unique
    image            String?
    background       String?
    email            String?   @unique
    emailVerified    DateTime?
    createdAt        DateTime  @default(now())
    updatedAt        DateTime  @updatedAt
    address          String?   @unique
    instaUsername    String?
    twitterUsername  String?
    facebookUsername String?
    followIds        String[]
    followerIds      String[]
    description      String?
    invitedBy        String?
    volume           Decimal?
    items            Int?
    collections      String[]
    offersReceived   String[]
    offersMade       String[]
    userNfts         String[]

    @@unique([username, address])
    @@index([address])
}

model NFT {
    id                String   @id @default(uuid())
    collectionId      String?
    Activity          String[]
    nftId             Int?
    image             String?
    collectionAddress String?
    category          String?
    isAuctioned       Boolean?
    isOffered         Boolean?
    currentValue      Decimal?
    latestBid         Int?
    latestOffer       Int?
    auctionTimer      Int?
    likes             Int?
    userId            String?
    OffersReceived    String[]
    OffersMade        String[]
}

model Collection {
    id               String     @id @default(uuid())
    creator          String
    name             String?
    logo             String?
    background       String?
    address          String?
    instaUsername    String?
    twitterUsername  String?
    facebookUsername String?
    followIds        String[]
    followerIds      String[]
    volume           Decimal?
    items            Int?
    owners           Int?
    sold             Int?
    likes            Int?
    floorPrice       Int?
    description      String?
    categories       Category[]
    NFTs             String[]
}

model Category {
    id          String       @id @default(uuid())
    name        String?
    collections Collection[]
}

model OffersReceived {
    id     String   @id @default(uuid())
    userId String?
    price  Decimal?
    nftId  String?
}

model OffersMade {
    id     String   @id @default(uuid())
    userId String?
    price  Decimal?
    nftId  String?
}

model Activity {
    id           String   @id @default(uuid())
    activityType String?
    item         String[]
    price        Decimal?
    from         String?
    fromAddress  String?
    to           String?
    toAddress    String?
    time         String?
    nftId        String?
}
